char* GetLastStdExceptionMessage();
void RegisterExceptionCallback(const void* callback);
void DisposeSharedPointer( void*  ptr);
void DeleteAnsiStringArray(char** values, int arrayLength);
void DeleteAnsiString(const char* value);
void DeleteDoubleArray(double* value);
void SetTimeSeriesMissingValueValue(double missingValueValue);
void*  LoadEnsembleDataset(const char* filename, const char* dataPath);
void*  CreateEnsembleDataset(const char* type);
char** GetEnsembleDatasetDataIdentifiers( void*  dataLibrary, int* size);
char** GetEnsembleDatasetDataSubIdentifiers( void*  dataLibrary, const char* dataCollectionId, int* size);
char** GetEnsembleDatasetDataSummaries( void*  dataLibrary, int* size);
time_series_dimensions_description* GetDataDimensionsDescription( void*  dataLibrary, const char* dataId);
void DisposeDataDimensionsDescriptions(time_series_dimensions_description* data);
void*  CreateEnsembleForecastTimeSeries(date_time_to_second start, int length, const char* timeStepName);
void*  GetDatasetSingleTimeSeries( void*  dataLibrary, const char* dataId);
void*  GetDatasetEnsembleTimeSeries( void*  dataLibrary, const char* dataEnsembleId);
void*  GetDatasetEnsembleForecastTimeSeries( void*  dataLibrary, const char* dataId);
void*  GetItemEnsembleForecastTimeSeries( void*  efts, int i);
void*  TimeSeriesFromEnsembleOfTimeSeries( void*  collectionTs, int index);
void*  TimeSeriesFromTimeSeriesOfEnsembleOfTimeSeries( void*  efts, int indexInIssueTime, int indexInForecastTime);
void*  CreatePerfectForecastTimeSeries( void*  observations, date_time_to_second start, int length, const char* timeStepName, int offsetForecasts, int leadTime);
void SetItemEnsembleForecastTimeSeriesAsStructure( void*  series, int i, multi_regular_time_series_data* values);
multi_regular_time_series_data* GetItemEnsembleForecastTimeSeriesAsStructure( void*  series, int i);
multi_regular_time_series_data* ToStructEnsembleTimeSeriesData( void*  ensSeries);
multi_regular_time_series_data* ToStructSingleTimeSeriesData( void*  timeSeries);
void DisposeMultiTimeSeriesData(multi_regular_time_series_data* data);
void GetTimeSeriesGeometry( void*  timeSeries, void*  geom);
void GetEnsembleForecastTimeSeriesGeometry( void*  timeSeries, void*  geom);
void GetTimeSeriesValues( void*  timeSeries, double* values, int arrayLength);
int GetNumTimeSeries();
void GetProviderTsGeometry( void*  dataLibrary, const char* variableIdentifier, void*  geom);
void GetProviderTimeSeriesValues( void*  dataLibrary, const char* variableIdentifier, double* values, int arrayLength);
char** GetProviderTimeSeriesIdentifiers( void*  dataLibrary, int* size);

