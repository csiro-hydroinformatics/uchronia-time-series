extern void RegisterExceptionCallback(const void* callback);
extern void DisposeSharedPointer(void* ptr);
extern void DeleteAnsiStringArray(char** values, int arrayLength);
extern void DeleteAnsiString(const char* value);
extern void DeleteDoubleArray(double* value);
extern void SetTimeSeriesMissingValueValue(double missingValueValue);
extern void* LoadEnsembleDataset(const char* libraryIdentifier, const char* dataPath);
extern void* CreateEnsembleDataset(const char* type);
extern char** GetEnsembleDatasetDataIdentifiers(void* dataLibrary, int* size);
extern char** GetEnsembleDatasetDataSubIdentifiers(void* dataLibrary, const char* dataCollectionId, int* size);
extern char** GetEnsembleDatasetDataSummaries(void* dataLibrary, int* size);
extern time_series_dimensions_description* GetDataDimensionsDescription(void* dataLibrary, const char* dataId);
extern int EnsembleSizeEnsembleTimeSeries(void* ensSeries);
extern void DisposeDataDimensionsDescriptions(time_series_dimensions_description* data);
extern void* CreateEnsembleForecastTimeSeries(date_time_to_second start, int length, const char* timeStepName);
extern void* GetDatasetSingleTimeSeries(void* dataLibrary, const char* dataId);
extern void* GetDatasetEnsembleTimeSeries(void* dataLibrary, const char* dataEnsembleId);
extern void* GetDatasetEnsembleForecastTimeSeries(void* dataLibrary, const char* dataId);
extern void SaveSingleTimeSeriesToNetcdf(void* timeSeries, char* filename, bool overwrite);
extern void SaveEnsembleTimeSeriesToNetcdf(void* collection, char* filename, bool overwrite);
extern void SaveEnsembleForecastTimeSeriesToNetcdf(void* tsEnsTs, char* filename, bool overwrite);
extern bool IsMissingValueItemEnsembleForecastTimeSeries(void* series, int i);
extern void* GetItemEnsembleForecastTimeSeries(void* efts, int i);
extern void* TimeSeriesFromEnsembleOfTimeSeries(void* collectionTs, int index);
extern void* TimeSeriesFromTimeSeriesOfEnsembleOfTimeSeries(void* efts, int indexInIssueTime, int indexInForecastTime);
extern double GetValueFromUnivariateTimeSeries(void* ts, int index);
extern void TransformEachItem(void* tsEnsTs, char* method, char* methodArgument);
extern void SetValueToUnivariateTimeSeries(void* ts, int index, double value);
extern multi_regular_time_series_data* GetItemEnsembleForecastTimeSeriesAsStructure(void* series, int i);
extern multi_regular_time_series_data* GetItemEnsembleTimeSeriesAsStructure(void* series, int i);
extern void SetItemEnsembleForecastTimeSeriesAsStructure(void* series, int i, const multi_regular_time_series_data* values);
extern void SetItemEnsembleTimeSeriesAsStructure(void* collection, int i, const multi_regular_time_series_data* values);
extern void* CreatePerfectForecastTimeSeries(void* observations, date_time_to_second start, int length, const char* timeStepName, int offsetForecasts, int leadTime);
extern multi_regular_time_series_data* ToStructEnsembleTimeSeriesData(void* ensSeries);
extern multi_regular_time_series_data* ToStructSingleTimeSeriesData(void* timeSeries);
extern void* CreateEnsembleTimeSeriesDataFromStruct(const multi_regular_time_series_data* ensSeries);
extern void* CreateSingleTimeSeriesDataFromStruct(const multi_regular_time_series_data* timeSeries);
extern void DisposeMultiTimeSeriesData(multi_regular_time_series_data* data);
extern void GetTimeSeriesGeometry(void* timeSeries, void* geom);
extern void GetEnsembleForecastTimeSeriesGeometry(void* timeSeries, void* geom);
extern void GetTimeSeriesValues(void* timeSeries, double* values, int arrayLength);
extern int GetNumTimeSeries();
extern void GetProviderTsGeometry(void* dataLibrary, const char* variableIdentifier, void* geom);
extern void GetProviderTimeSeriesValues(void* dataLibrary, const char* variableIdentifier, double* values, int arrayLength);
extern char** GetProviderTimeSeriesIdentifiers(void* dataLibrary, int* size);
extern void* TimeSeriesFromProviderTs(void* dataLibrary, const char* variableIdentifier);
