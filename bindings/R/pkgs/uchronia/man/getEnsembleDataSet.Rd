% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uchronia-data-set.r
\name{getEnsembleDataSet}
\alias{getEnsembleDataSet}
\title{Gets an object, a library to access a set of time series}
\usage{
getEnsembleDataSet(dataSetId = "someId", dataPath = "")
}
\arguments{
\item{dataSetId}{currently only a path to a file in YAML is supported.}
}
\value{
an S4 object 'ExternalObjRef' [package "cinterop"] with external pointer type ENSEMBLE_DATA_SET_PTR
}
\description{
Gets an object, a library to access a set of time series
}
\examples{
\dontrun{
 d <- uchronia::sampleDataDir()
 yamlFn <- file.path(d, 'time_series_library.yaml')
 if(!file.exists(yamlFn)) {stop(paste0('sample YAML file ', yamlFn, ' not found')) }
 file.show(yamlFn)
 dataSet <- uchronia::getEnsembleDataSet(yamlFn)
 (dataIds <- uchronia::getDataSetIds(dataSet))
 subIdentifiers(dataSet, "var1_obs_collection")
 (univTs <- uchronia::getDataSet(dataSet, "var1_obs"))
 (multivTs <- uchronia::getDataSet(dataSet, "var1_obs_collection"))
 (ensFcast <- uchronia::getDataSet(dataSet, "pet_fcast_ens"))
 plot(asXts(univTs))
 zoo::plot.zoo(asXts(multivTs))
 ## precipIds <- paste( 'subarea', getSubareaIds(simulation), 'P', sep='.')
 ## evapIds <- paste( 'subarea', getSubareaIds(simulation), 'E', sep='.')
 ## swift::playInputs(simulation, dataSet, precipIds, rep('rain_obs', length(precipIds)))
 ## swift::playInputs(simulation, dataSet, evapIds, rep('pet_obs', length(evapIds)), 'daily_to_hourly')
}
}
